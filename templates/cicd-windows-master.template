{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template deploys an MSBuild server and AWS CodeDeploy server with a supporting VPC and RDGateway for isolating and accessing the instances for an automated Microsoft .NET build pipeline. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. ",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "RDGWCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "NATInstanceType",
                        "RDGW1NetBIOSName",
                        "RDGW1PrivateIP",
                        "RDGW2NetBIOSName",
                        "RDGW2PrivateIP",
                        "RDGWInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Microsoft Remote Desktop Gateway Configuration"
                    },
                    "Parameters": [
                        "AdminUser",
                        "AdminPassword",
                        "DomainDNSName"
                    ]
                },
                {
                    "Label": {
                        "default": "CodeDeploy and DemoApp Configuration"
                    },
                    "Parameters": [
                        "CodeDeployAppName",
                        "CodeDeployDeploymentGroupName",
                        "CodeDeployNumberOfServers",
                        "DemoAppInclude",
                        "DemoAppDBUserName",
                        "DemoAppDBPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Jenkins Build Configuration"
                    },
                    "Parameters": [
                        "ELBServerCertificateName",
                        "JenkinsUserName",
                        "JenkinsPassword",
                        "SourceFolder",
                        "ReleaseFolder",
                        "MSBuildProjectOrSolutionFileName"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AdminPassword": {
                    "default": "Admin Password"
                },
                "AdminUser": {
                    "default": "Admin User Name"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "CodeDeployAppName": {
                    "default": "Application name that will be used by CodeDeploy."
                },
                "CodeDeployDeploymentGroupName": {
                    "default": "DeploymentGroup name that will be used by the CodeDeploy Application."
                },
                "CodeDeployNumberOfServers": {
                    "default": "Choose the number of CodeDeploy test servers you want to deploy"
                },
                "DemoAppDBPassword": {
                    "default": "Password for the user account that is used by the demo app"
                },
                "DemoAppDBUserName": {
                    "default": "Username to login to the database server for the demo app"
                },
                "DemoAppInclude": {
                    "default": "Choose whether or not you want to deploy the demo application"
                },
                "DomainDNSName": {
                    "default": "Domain DNS Name"
                },
                "ELBServerCertificateName":{
                    "default": "This is the name of the certificate that will be created and used by the ELB for the web applications deployed to the build and test servers."
                }, 
                "JenkinsPassword": {
                    "default": "This is the password for the Jenkins user you created"
                },
                "JenkinsUserName": {
                    "default": "This user will be created in Jenkins so you can manage your Jenkins build jobs"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "MSBuildProjectOrSolutionFileName": {
                    "default": "Inside of your SourceFolder there will be either a project or solution file that will describe how you want MSBuild to be run and potentially packaged and released to the ReleaseFolder"
                },
                "NATInstanceType": {
                    "default": "NAT Instance Type"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RDGW1NetBIOSName": {
                    "default": "Remote Desktop Gateway 1 NetBIOS Name"
                },
                "RDGW1PrivateIP": {
                    "default": "Remote Desktop Gateway 1 Private IP Address"
                },
                "RDGW2NetBIOSName": {
                    "default": "Remote Desktop Gateway 2 NetBIOS Name"
                },
                "RDGW2PrivateIP": {
                    "default": "Remote Desktop Gateway 2 Private IP Address"
                },
                "RDGWCIDR": {
                    "default": "Allowed Remote Desktop Gateway External Access CIDR"
                },
                "RDGWInstanceType": {
                    "default": "Remote Desktop Gateway Instance Type"
                },
                "ReleaseFolder": {
                    "default": "In order to package up your release you need to specify a folder where the binaries and config information can be zipped for CodeDeploy"
                },
                "SourceFolder": {
                    "default": "Inside of your code zip package you need to give the detailed path to the source code you want to build. *NOTE: You must include the root folder form the zip file in your path and use a backslash between folders."
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                }
            }
        }
    },
    "Parameters": {
        "AdminPassword": {
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "Description": "Password for the administrative account. Must be at least 8 characters containing letters, numbers and symbols",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "AdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "StackAdmin",
            "Description": "User name for the new local administrator account",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "CodeDeployAppName": {
            "AllowedPattern": "[-_a-zA-Z0-9]*",
            "ConstraintDescription": "can contain only alphanumeric characters, dashes, and underscores.",
            "Default": "DemoApp",
            "Description": "Application name that will be used by CodeDeploy.",
            "MaxLength": "100",
            "MinLength": "1",
            "Type": "String"
        },
        "CodeDeployDeploymentGroupName": {
            "AllowedPattern": "[-_a-zA-Z0-9]*",
            "ConstraintDescription": "can contain only alphanumeric characters, dashes, and underscores.",
            "Default": "DemoApp-DG",
            "Description": "DeploymentGroup name that will be used by CodeDeploy.",
            "MaxLength": "100",
            "MinLength": "1",
            "Type": "String"
        },
        "CodeDeployNumberOfServers": {
            "AllowedValues": [
                "1",
                "2"
            ],
            "Default": "1",
            "Description": "Choose how many test servers you want to deploy with CodeDeploy.",
            "Type": "String"
        },
        "DemoAppDBPassword": {
            "AllowedPattern": "[!#$%^&*a-zA-Z0-9]*",
            "ConstraintDescription": "Minimum of 8 alphanumeric characters and any of the following special characters (!,#,$,%,^,&,*)",
            "Description": "The database admin account password",
            "MaxLength": "128",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DemoAppDBUserName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "awsuser",
            "Description": "The database admin account username",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "DemoAppInclude": {
            "AllowedValues": [
                "yes",
                "no"
            ],
            "Default": "yes",
            "Description": "To include a demo application that will be used to build and deploy for testing.",
            "Type": "String"
        },
        "DomainDNSName": {
            "Description": "Fully qualified domain name (FQDN) e.g. example.com",
            "Type": "String",
            "Default": "example.com",
            "MinLength": "3",
            "MaxLength": "25",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "ELBServerCertificateName": {
            "AllowedPattern": "[-a-zA-Z0-9]*",
            "ConstraintDescription": "can only contain alphanumeric characters and dashes.",
            "Description": "This is the name of the certificate that will be created and used by the ELB for the web applications deployed to the build and test servers.",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "JenkinsPassword": {
            "ConstraintDescription": "Minimum of 8 characters",
            "Description": "The password for the Jenkins user.",
            "MaxLength": "41",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "JenkinsUserName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters.",
            "Default": "JenkinsUser",
            "Description": "This account will be given access to Jenkins to configure and run builds.",
            "MaxLength": "16",
            "MinLength": "1",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "MSBuildProjectOrSolutionFileName": {
            "Description": "We need the path inside of your code archive to the .proj or .sln file used to drive the MSBuild step in Jenkins.",
            "MaxLength": "100",
            "MinLength": "1",
            "Type": "String"
        },
        "NATInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m4.large"
            ],
            "Default": "t2.small",
            "Description": "Amazon EC2 instance type for the NAT instances. This is used only if the region does not support NAT gateways.",
            "Type": "String"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.128.0/20",
            "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.144.0/20",
            "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Default": "cicd/windows/latest",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with forward slash (/) because they are automatically appended.",
            "Type": "String"
        },
        "RDGW1NetBIOSName": {
            "Description": "NetBIOS name of the first Remote Desktop Gateway (up to 15 characters)",
            "Type": "String",
            "Default": "RDGW1",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "RDGW1PrivateIP": {
            "Description": "Fixed private IP for the first Remote Desktop Gateway located in Availability Zone 1",
            "Type": "String",
            "Default": "10.0.128.11"
        },
        "RDGW2NetBIOSName": {
            "Description": "NetBIOS name of the second Remote Desktop Gateway (up to 15 characters)",
            "Type": "String",
            "Default": "RDGW2",
            "MinLength": "1",
            "MaxLength": "15",
            "AllowedPattern": "[a-zA-Z0-9]+"
        },
        "RDGW2PrivateIP": {
            "Description": "Fixed private IP for the second Remote Desktop Gateway located in Availability Zone 2",
            "Type": "String",
            "Default": "10.0.144.11"
        },
        "RDGWCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "0.0.0.0/0",
            "Description": "Allowed CIDR Block for external access to the Remote Desktop Gateways",
            "Type": "String"
        },
        "RDGWInstanceType": {
            "Description": "Amazon EC2 instance type for the Remote Desktop Gateway instances",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "ReleaseFolder": {
            "Description": "This release folder can be used by the Jenkins job to only copy the binaries to the test server. All content copied into this folder will be zipped and shipped via CodeDeploy.",
            "MaxLength": "100",
            "MinLength": "1",
            "Type": "String"
        },
        "SourceFolder": {
            "Description": "This will be used to find the path to the source code to build after it is unzipped. *NOTE: You must include the root folder from the zip file in your path and use a backslash between folders.",
            "MaxLength": "100",
            "MinLength": "1",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/16",
            "Description": "CIDR Block for the VPC",
            "Type": "String"
        }
    },
    "Mappings": {
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-gov-west-1": {
                "Partition": "aws-us-gov",
                "QuickStartS3URL": "https://s3-us-gov-west-1.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "submodules/quickstart-aws-vpc",
                            "templates/aws-vpc.template"
                        ]
                    ]
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NATInstanceType": {
                        "Ref": "NATInstanceType"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "RDGWStack": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "VPCStack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/rdgw-standalone.template"
                        ]
                    ]
                },
                "Parameters": {
                    "AdminPassword": {
                        "Ref": "AdminPassword"
                    },
                    "AdminUser": {
                        "Ref": "AdminUser"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Join": [
                            "/",
                            [
                                {
                                    "Ref": "QSS3KeyPrefix"
                                },
                                "submodules/quickstart-microsoft-rdgateway"
                            ]
                        ]
                    },
                    "RDGW1InstanceType": {
                        "Ref": "RDGWInstanceType"
                    },
                    "RDGW1NetBIOSName": {
                        "Ref": "RDGW1NetBIOSName"
                    },
                    "RDGW1PrivateIP": {
                        "Ref": "RDGW1PrivateIP"
                    },
                    "RDGW2InstanceType": {
                        "Ref": "RDGWInstanceType"
                    },
                    "RDGW2NetBIOSName": {
                        "Ref": "RDGW2NetBIOSName"
                    },
                    "RDGW2PrivateIP": {
                        "Ref": "RDGW2PrivateIP"
                    },
                    "RDGWCIDR": {
                        "Ref": "RDGWCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "WindowsBuildServerAndCodeDeployStack": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "RDGWStack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Join": [
                        "/",
                        [
                            {
                                "Fn::FindInMap": [
                                    "AWSInfoRegionMap",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    "QuickStartS3URL"
                                ]
                            },
                            {
                                "Ref": "QSS3BucketName"
                            },
                            {
                                "Ref": "QSS3KeyPrefix"
                            },
                            "templates/cicd-windows.template"
                        ]
                    ]
                },
                "Parameters": {
                    "CodeDeployAppName": {
                        "Ref": "CodeDeployAppName"
                    },
                    "CodeDeployDeploymentGroupName": {
                        "Ref": "CodeDeployDeploymentGroupName"
                    },
                    "CodeDeployNumberOfServers": {
                        "Ref": "CodeDeployNumberOfServers"
                    },
                    "DemoAppDBPassword": {
                        "Ref": "DemoAppDBPassword"
                    },
                    "DemoAppDBUserName": {
                        "Ref": "DemoAppDBUserName"
                    },
                    "DemoAppInclude": {
                        "Ref": "DemoAppInclude"
                    },
                    "ELBServerCertificateName": {
                        "Ref": "ELBServerCertificateName"
                    },
                    "JenkinsPassword": {
                        "Ref": "JenkinsPassword"
                    },
                    "JenkinsUserName": {
                        "Ref": "JenkinsUserName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "MSBuildProjectOrSolutionFileName": {
                        "Ref": "MSBuildProjectOrSolutionFileName"
                    },
                    "PrivateSubnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RDGWSecurityGroup": {
                        "Fn::GetAtt": [
                            "RDGWStack",
                            "Outputs.RemoteDesktopGatewaySGID"
                        ]
                    },
                    "ReleaseFolder": {
                        "Ref": "ReleaseFolder"
                    },
                    "SourceFolder": {
                        "Ref": "SourceFolder"
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCCIDR"
                        ]
                    }
                }
            }
        }
    }
}
