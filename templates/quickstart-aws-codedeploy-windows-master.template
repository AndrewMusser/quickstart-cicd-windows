{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "This template deploys an MSBuild server and AWS CodeDeploy server with a supporting VPC and RDGateway for isolating and accessing the instances for an automated Microsoft .NET build pipeline. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. ",
  "Metadata" : {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration with Remote Gateway"
          },
          "Parameters": [
            "AvailabilityZones",
            "KeyPairName",
            "NATInstanceType",
            "RDGWInstanceType",
            "RDGWCIDR",
            "AdminUser",
            "AdminPassword"
          ]
        },
        {
          "Label": {
            "default": "CodeDeploy and Build Server Configuration"
          },
          "Parameters": [
            "NumberOfCodeDeployServers",
            "IncludeELBForTesting",
            "CodeDeploy-BucketName"
            "CodeDeploy-AppName",
            "CodeDeploy-DeploymentGroupName",
            "DemoApp-Include",
            "DemoApp-DBUserName",
            "DemoApp-DBPassword"
          ]
        }
      ],
      "ParameterLabels": {
        "AvailabilityZones": {
          "default": "Choose 2 availability zones to deploy to."
        }, 
        "KeyPairName": {
          "default": "Key pair name"
        },
        "NATInstanceType": {
          "default": "NAT instance type"
        },
        "RDGWInstanceType": {
          "default": "Remote Desktop Gateway instance type"
        },
        "RDGWCIDR": {
          "default": "Allowed Remote Desktop Gateway External Access CIDR"
        },
        "AdminUser": {
          "default": "Remote Desktop Gateway Admin user name"
        },
        "AdminPassword": {
          "default": "Remote Desktop Gateway Admin user password"
        },
        "CodeDeploy-BucketName": {
          "default": "S3 Bucket name for deploying code revisions"
        },
        "CodeDeploy-AppName": {
          "default": "Application name that will be used by CodeDeploy."
        },
        "CodeDeploy-DeploymentGroupName": {
          "default": "DeploymentGroup name that will be used by the CodeDeploy Application."
        },
        "NumberOfCodeDeployServers": {
          "default": "Choose the number of CodeDeploy test servers you want to deploy"
        },        
        "DemoApp-Include": {
          "default": "Choose whether or not you want to deploy the demo application"
        },
        "DemoApp-DBUserName": {
          "default": "Username to login to the database server for the demo app"
        },
        "DemoApp-DBPassword": {
          "default": "Password for the user account that is used by the demo app"
        },
        "IncludeELBForTesting": {
          "default": "Choose whether or not you want to include an ELB to test multiple servers from a single CName."
        }
      }
    }
  }, 
  "Parameters" : {
    "AvailabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "NATInstanceType": {
       "AllowedValues": ["t2.nano","t2.micro","t2.small","t2.medium","t2.large","m3.medium","m3.large","m4.large"],
       "Default": "t2.small",
       "Description": "Amazon EC2 instance type for the NAT instances. This is used only if the region does not support NAT gateways.",
       "Type": "String"
    },
    "RDGWInstanceType": {
       "AllowedValues": ["m4.large","m4.xlarge","m4.2xlarge","m4.4xlarge"],
       "Default": "m4.xlarge",
       "Description": "Amazon EC2 instance type for the Remote Desktop Gatweway Instance",
       "Type": "String"
    },
    "RDGWCIDR": {
       "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
       "Default": "0.0.0.0/0",
       "Description": "Allowed CIDR Block for external access to the Remote Desktop Gateways",
       "Type": "String"
    },
    "AdminUser": {
       "Description": "User name for the new local administrator account",
       "Type": "String",
       "Default": "StackAdmin",
       "MinLength": "5",
       "MaxLength": "25",
       "AllowedPattern": "[a-zA-Z0-9]*"
    },
    "AdminPassword": {
       "Description": "Password for the administrative account. Must be at least 8 characters containing letters, numbers and symbols",
       "Type": "String",
       "MinLength": "8",
       "MaxLength": "32",
       "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
       "NoEcho": "true"
    },
    "KeyPairName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "CodeDeploy-BucketName": {
      "Description": "Unique DNS name for an S3 bucket to build and deploy your code from.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "24",
      "AllowedPattern": "[-a-z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric lower case characters and dashes."
    },
    "CodeDeploy-AppName": {
      "Description": "Application name that will be used by CodeDeploy.",
      "Default" : "DemoApp",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "100",
      "AllowedPattern": "[-_a-z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric lower case characters, dashes, and underscores."
    },
    "CodeDeploy-DeploymentGroupName": {
      "Description": "DeploymentGroup name that will be used by CodeDeploy.",
      "Default" : "DemoApp-DG",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "100",
      "AllowedPattern": "[-_a-z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric lower case characters, dashes, and underscores."
    },
    "DemoApp-DBUsername": {
      "Default": "awsuser",
      "Description" : "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DemoApp-DBPassword": {
      "NoEcho": "true",
      "Description" : "The database admin account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "128",
      "AllowedPattern" : "[!#$%^&*a-zA-Z0-9]*",
      "ConstraintDescription" : "Minimum of 8 alphanumeric characters and any of the following special characters (!,#,$,%,^,&,*)"
    },
    "DemoApp-Include": {
      "AllowedValues": ["yes","no"],
      "Default": "yes",
      "Description": "To include a demo application that will be used to build and deploy for testing.",
      "Type": "String"
    },
    "NumberOfCodeDeployServers": {
      "AllowedValues": ["1","2"],
      "Default": "1",
      "Description": "Choose how many test servers you want to deploy with CodeDeploy.",
      "Type": "String"
    },
    "IncludeELBForTesting": {
      "AllowedValues": ["yes","no"],
      "Default": "no",
      "Description": "To include an ELB with multiplle CodeDeploy test servers choose yes.",
      "Type": "String"
    }
  },
  "Resources": {
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "VPCStack"
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/aws/vpc/latest/templates/aws-vpc.template",
        "Parameters": {
          "AvailabilityZones": {
            "Fn::Join": [",",{ "Ref" : "AvailabilityZones" } ]
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "NATInstanceType": {
            "Ref": "NATInstanceType"
          }
        }
      }
    },
    "RDGWStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "VPCStack"
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/microsoft/rdgateway/latest/templates/rdgw-standalone.template",
        "Parameters": {
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "RDGW1InstanceType": {
            "Ref": "RDGWInstanceType"
          },
          "RDGW2InstanceType": {
            "Ref": "RDGWInstanceType"
          },
          "AdminUser": {
            "Ref": "AdminUser"
          },
          "AdminPassword": {
            "Ref": "AdminPassword"
          },
          "RDGWCIDR": {
            "Ref": "RDGWCIDR"
          },
          "VPC": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.VPCID"
            ]
          },
          "PublicSubnet1ID":{
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PublicSubnet1ID"
            ]
          },
          "PublicSubnet2ID":{
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PublicSubnet2ID"
            ]
          }        
        }
     },
     "WindowsBuildServerAndCodeDeployStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "RDGWStack",
      "Properties": {
        "TemplateURL": "TBD",
        "Parameters": {
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "VPC": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.VPCID"
            ]
          },
          "VPCCIDR": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.VPCCIDR"
            ]
          }, 
          "PublicSubnet1ID":{
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PublicSubnet1ID"
            ]
          },
          "PublicSubnet2ID":{
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PublicSubnet2ID"
            ]
          },
          "PrivateSubnet1ID":{
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet1AID"
            ]
          },
          "PrivateSubnet2ID":{
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet2AID"
            ]
          },
          "RDGWSecurityGroup":{
            "Fn::GetAtt":[
              "RDGWStack",
              "Outputs.RemoteDesktopGatewaySGID"
            ]
          },
          "CodeDeploy-BucketName":{
            "Ref" : "CodeDeploy-BucketName"
          },
          "CodeDeploy-AppName":{
            "Ref" : "CodeDeploy-AppName"
          }, 
          "CodeDeploy-DeploymentGroupName":{
            "Ref" : "CodeDeploy-DeploymentGroupName"
          }, 
          "DemoApp-DBUserName":{
            "Ref" : "DemoApp-DBUserName"
          },
          "DemoApp-DBPassword":{
            "Ref" : "DemoApp-DBPassword"
          },
          "DemoApp-Include":{
            "Ref" : "DemoApp-Include"
          },
          "NumberOfCodeDeployServers":{
            "Ref" : "NumberOfCodeDeployServers"
          },
          "IncludeELBForTesting":{
            "Ref" : "IncludeELBForTesting"
          },
        }
     }
  }
}