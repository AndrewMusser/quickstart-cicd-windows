{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "This template will create a Windows build server that has MSBuild pre-installed and configures CodeDeploy deployments through S3 to 1 or more CodeDeploy servers. **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack.",
  "Parameters" : {   
    "KeyPairName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "DemoApp-DBUserName": {
      "Default": "awsuser",
      "Description" : "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },
    "DemoApp-DBPassword": {
      "NoEcho": "true",
      "Description" : "The database admin account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "ConstraintDescription" : "Minimum of 8 characters"
    },
    "DemoApp-Include": {
      "AllowedValues": ["yes","no"],
      "Default": "yes",
      "Description": "To include a demo application that will be used to build and deploy for testing.",
      "Type": "String"
    },
    "NumberOfCodeDeployServers": {
      "AllowedValues": ["1","2"],
      "Default": "1",
      "Description": "Choose how many test servers you want to deploy with CodeDeploy.",
      "Type": "String"
    },
    "IncludeELBForTesting": {
      "AllowedValues": ["yes","no"],
      "Default": "no",
      "Description": "To include an ELB with multiplle CodeDeploy test servers choose yes.",
      "Type": "String"
    },
    "VPC": {
      "Description": "ID of the VPC (e.g., vpc-0343606e)",
      "Type": "AWS::EC2::VPC::Id"
    },
    "VPCCIDR":{
      "Description": "CIDR block for the VPC",
      "Type": "String"
    }, 
    "PublicSubnet1": {
      "Description": "ID of the public subnet you want to provision resources to that can be accessed from the public internet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnet2": {
      "Description": "ID of the public subnet you want to provision resources to that can be accessed from the public internet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet1": {
      "Description": "ID of the private subnet you want to provision resources to that can only be accessed through a gateway",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet2": {
      "Description": "ID of the private subnet you want to provision resources to that can only be accessed through a gateway",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "RDGWSecurityGroup":{
      "Description": "ID of the security group for remote access gateways that can access the build server and code deploy servers",
      "Type": "AWS::EC2::SecurityGroup"
    },
    "CodeDeploy-BucketName": {
      "Description": "Unique DNS name for an S3 bucket to build and deploy your code from.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "24",
      "AllowedPattern": "[-a-z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric lower case characters and dashes."
    },
    "CodeDeploy-AppName": {
      "Description": "Application name that will be used by CodeDeploy.",
      "Default" : "DemoApp",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "100",
      "AllowedPattern": "[-_a-z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric lower case characters, dashes, and underscores."
    },
    "CodeDeploy-DeploymentGroupName": {
      "Description": "DeploymentGroup name that will be used by CodeDeploy.",
      "Default" : "DemoApp-DG",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "100",
      "AllowedPattern": "[-_a-z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric lower case characters, dashes, and underscores."
    },
  },
  "Conditions" :{
    "DeployDemoApp" : { "Fn::Equals" : [ { "Ref" : "DemoApp-Include" }, "yes" ] },
    "DemoAppNotIncluded" : { "Fn::Equals" : [ { "Ref" : "DemoApp-Include" }, "no" ] },
    "CreateMultipleCodeDeployServers" : { "Fn::Equals" : [ { "Ref" : "NumberOfCodeDeployServers" }, "2" ] }
  },
  "Mappings": {
    "AWSAMIRegionMap": {
      "AMI": {
        "WS2012R2": "Windows_Server-2012-R2_RTM-English-64Bit-Base-2016.06.15"
      },
      "ap-northeast-1": {
        "WS2012R2": "ami-7b62881a"
      },
      "ap-northeast-2": {
        "WS2012R2": "ami-082ee566"
      },
      "ap-south-1": {
        "WS2012R2": "ami-7aacc615"
      },
      "ap-southeast-1": {
        "WS2012R2": "ami-e113c082"
      },
      "ap-southeast-2": {
        "WS2012R2": "ami-83b198e0"
      },
      "eu-central-1": {
        "WS2012R2": "ami-fa799095"
      },
      "eu-west-1": {
        "WS2012R2": "ami-50e67823"
      },
      "sa-east-1": {
        "WS2012R2": "ami-0b6be167"
      },
      "us-east-1": {
        "WS2012R2": "ami-79dc1b14"
      },
      "us-west-1": {
        "WS2012R2": "ami-cface9af"
      },
      "us-west-2": {
       "WS2012R2": "ami-8d0acfed"
      }
    }
  },
  "Resources": {
    "MyDBSecurityGroup" : {
      "Type" : "AWS::RDS::DBSecurityGroup",
      "Condition" : "DeployDemoApp",
      "Properties" : {
        "GroupDescription" : "Security group for Quickstart RDS DB Instance",
        "DBSecurityGroupIngress" : {
            "CIDRIP" : { "Ref" : "VPCCIDR"}
            }
        },
        "EC2VpcId" : { "Ref" : "VPC" }
      }
    },
    "MyDBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Condition" : "DeployDemoApp",
      "Properties" : {
        "DBSubnetGroupDescription" : "Subnets available for the RDS DB Instance",
        "SubnetIds" : [ { "Ref" : "PrivateSubnet1" }, {"Ref" : "PrivateSubnet2" } ]
      }
    },
    "MyDB" : {
      "Type" : "AWS::RDS::DBInstance",
      "Condition" : "DeployDemoApp",
      "Properties" : {
        "AllocatedStorage" : "50",
        "DBInstanceClass" : "db.m3.medium",
        "Engine" : "sqlserver-web",
        "EngineVersion" : "12.00.4422.0.v1",
        "MultiAZ" : "false",
        "MasterUsername" : { "Ref" : "DBUsername" } ,
        "MasterUserPassword" : { "Ref" : "DBPassword" },
        "DBSubnetGroupName" : { "Ref" : "MyDBSubnetGroup" },
        "DBSecurityGroups" : [ { "Ref" : "MyDBSecurityGroup" } ]
      }
   },
  "CodeDeployBucket" : {
    "Type" : "AWS::S3::Bucket",
    "Properties": {
      "BucketName": { "Ref" : "CodeDeployBucketName" }
    }   
  }, 
  "BuildServerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "buildserverpolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:ListBucket",
                  "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "CodeDeployBucket" } ] ] } 
                },
                {
                  "Effect": "Allow",
                  "Action": [ 
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:DeleteObject"
                  ], 
                  "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "CodeDeployBucket" }, "/*" ] ] } 
                }
              ]
            }
          }
        ]
      }
    },
    "BuildServerInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "BuildServerRole"
          }
        ]
      }
    },
   "CodeDeployServerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com",
                  "Fn::Join": [
                    "",
                    [
                      "codedeploy.",
                      { "Ref" : "AWS::Region" },
                      "amazonaws.com"
                    ]
                  ]
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "codedeployserverpolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "codedeploy:*",
                  "Resource": [
                    { "Fn::Join" : ["", ["arn:aws:codedeploy:",{ "Ref" : "AWS::Region" },":",{ "Ref" : "AWS::AccountID" },":application:", { "Ref" : "CodeDeploy-AppName" }  ]  ] }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:GetObject", 
                  "Resource": [
                     { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "CodeDeployBucket" }, "/*" ] ] },
                     { "Fn::Join" : ["", ["arn:aws:s3:::aws-codedeploy-",{ "Ref" : "AWS::Region" },"/*"] ] }
                   ]
                },
                {
            		  "Action": [ "ec2:DescribeInstances","ec2:DescribeInstanceStatus"],
                  "Resource": "*",
                  "Effect": "Allow"
                }
              ]
            }
          }
        ]
      }
    },
    "CodeDeployTargetServerProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "CodeDeployServerRole"
          }
        ]
      }
    },
    "BuildServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable RDP access via port 3389",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "SourceSecurityGroupId": { "Ref" : "RDGWSecurityGroup" }
          }
        ]
      }
    },
    "CodeDeployServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable RDP access via port 3389 and port 80 for web site access",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "SourceSecurityGroupId": { "Ref" : "RDGWSecurityGroup" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "BuildServerInstanceWithDemoAppInstalled" : {
      "Type" : "AWS::EC2::Instance",
      "Condition" : "DeployDemoApp",
      "DependsOn" : "CodeDeployBucket",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/modules/AWSQuickStart.zip"
              },
              "c:\\cfn\\scripts\\Download-File.ps1": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/scripts/Download-File.ps1"
              },
            },
            "commands": {
              "a-set-execution-policy": {
                 "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                 "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                  "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                  "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                  "command": {
                    "Fn::Join": ["",
                       [
                         "powershell.exe -Command \"",
                         "New-AWSQuickStartResourceSignal -Stack '",
                         {
                            "Ref": "AWS::StackName"
                         },
                            "' -Resource 'QuickStart-BuildServer' -Region '",
                         {
                            "Ref": "AWS::Region"
                         },
                         "'\""
                       ]
                    ]
                  },
                  "waitAfterCompletion": "0"
              },
              "d-create-project-directory": {
                "command": {
                  "Fn::Join": ["", ["powershell.exe -Command new-item c:\\Projects -Itemtype directory"]]
                },
                "waitAfterCompletion": 0
              },
              "e-download-sourcecode-with-build-definition": {
                 "command": {
                    "Fn::Join": ["",
                      [
                        "powershell.exe -Command \"C:\\cfn\\scripts\\Download-File.ps1 -Source '",
                        "https://s3.amazonaws.com/tomfullershare/WindowsCodeDeployDemo.zip",
                         "' -Destination 'C:\\Projects\\WindowsCodeDeployDemo.zip'\""
                      ]
                   ]
                 },
                 "waitAfterCompletion": "0"
              },
              "f-download-msbuild": {
                 "command": {
                    "Fn::Join": ["",
                      [
                        "powershell.exe -Command \"C:\\cfn\\scripts\\Download-File.ps1 -Source '",
                        "https://download.microsoft.com/download/E/E/D/EEDF18A8-4AED-4CE0-BEBE-70A83094FC5A/BuildTools_Full.exe",
                         "' -Destination 'C:\\cfn\\downloads\\BuildTools_Full.exe'\""
                      ]
                   ]
                 },
                 "waitAfterCompletion": "0"
              },
              "g-unzip-code-package": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\Projects\\WindowsCodeDeployDemo.zip -Destination C:\\Projects",
                "waitAfterCompletion": "0"
              },
              "h-install-msbuild": {
                "command": "C:\\cfn\\downloads\\BuildTools_Full.exe /q /l C:\\Projects\\BuildTools-Install-Log.txt",
                "waitAfterCompletion": 0
              },
              "i-run-initial-build": {
                "command": {
                  "Fn::Join":[
                    "",
                    [
                      "\"C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe\"",
                      " C:\\Projects\\WindowsCodeDeployDemo\\SoccerTeamWeb\\SoccerTeamWeb.csproj",
                      " /p:BucketName=",
                      {"Ref" : "CodeDeployBucket"},
                      " /t:Build;Deploy"
                    ]
                  ]
                },
                "waitAfterCompletion": 0
              },              
              "j-signal-success": {
                "command": "powershell.exe -Command \"Write-AWSQuickStartStatus\"",
                "waitAfterCompletion": 0
              }
            }
          }
        }
      },
      "Properties" : {
        "InstanceType" : "t2.medium",
        "SecurityGroupIds" : [{"Ref": "BuildServerSecurityGroup"} ],
        "ImageId" : { "Fn::FindInMap" : [ "AWSAMIRegionMap", { "Ref" : "AWS::Region" }, "WS2012R2" ]},
        "IamInstanceProfile": {"Ref":"BuildServerInstanceProfile"},
        "SubnetId": {"Ref":"PrivateSubnet1"},
        "KeyName": {"Ref": "KeyPairName"},
        "Tags" : [ { "Key" : "Name", "Value" : "QuickStart-WindowsBuildServer" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "",
               [
                 "<script>\n",
                 "cfn-init.exe -v -c config -s ",
                 {
                   "Ref": "AWS::StackId"
                 },
                 " -r QuickStart-BuildServer",
                 " --region ",
                 {
                   "Ref": "AWS::Region"
                 },
                 "\n",
                 "</script>\n"
               ]
             ]
           }
         },
         "CreationPolicy": {
            "ResourceSignal": {
               "Count": "1",
               "Timeout": "PT75M"
            }
         }
      }
    },
    "BuildServerInstanceCore" : {
      "Type" : "AWS::EC2::Instance",
      "Condition" : "DemoAppNotIncluded",
      "DependsOn" : "CodeDeployBucket",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/modules/AWSQuickStart.zip"
              },
              "c:\\cfn\\scripts\\Download-File.ps1": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/scripts/Download-File.ps1"
              },
            },
            "commands": {
              "a-set-execution-policy": {
                 "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                 "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                  "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                  "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                  "command": {
                    "Fn::Join": ["",
                       [
                         "powershell.exe -Command \"",
                         "New-AWSQuickStartResourceSignal -Stack '",
                         {
                            "Ref": "AWS::StackName"
                         },
                            "' -Resource 'QuickStart-BuildServer' -Region '",
                         {
                            "Ref": "AWS::Region"
                         },
                         "'\""
                       ]
                    ]
                  },
                  "waitAfterCompletion": "0"
              },
              "d-download-msbuild": {
                 "command": {
                    "Fn::Join": ["",
                      [
                        "powershell.exe -Command \"C:\\cfn\\scripts\\Download-File.ps1 -Source '",
                        "https://download.microsoft.com/download/E/E/D/EEDF18A8-4AED-4CE0-BEBE-70A83094FC5A/BuildTools_Full.exe",
                         "' -Destination 'C:\\cfn\\downloads\\BuildTools_Full.exe'\""
                      ]
                   ]
                 },
                 "waitAfterCompletion": "0"
              },
              "e-install-msbuild": {
                "command": "C:\\cfn\\downloads\\BuildTools_Full.exe /q /l C:\\Projects\\BuildTools-Install-Log.txt",
                "waitAfterCompletion": 0
              },              
              "h-signal-success": {
                "command": "powershell.exe -Command \"Write-AWSQuickStartStatus\"",
                "waitAfterCompletion": 0
              }
            }
          }
        }
      },
      "Properties" : {
        "InstanceType" : "t2.medium",
        "SecurityGroupIds" : [{"Ref": "BuildServerSecurityGroup"} ],
        "ImageId" : { "Fn::FindInMap" : [ "AWSAMIRegionMap", { "Ref" : "AWS::Region" }, "WS2012R2" ]},
        "IamInstanceProfile": {"Ref":"BuildServerInstanceProfile"},
        "SubnetId": {"Ref":"PrivateSubnet1"},
        "KeyName": {"Ref": "KeyPairName"},
        "Tags" : [ { "Key" : "Name", "Value" : "QuickStart-WindowsBuildServer" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "",
               [
                 "<script>\n",
                 "cfn-init.exe -v -c config -s ",
                 {
                   "Ref": "AWS::StackId"
                 },
                 " -r QuickStart-BuildServer",
                 " --region ",
                 {
                   "Ref": "AWS::Region"
                 },
                 "\n",
                 "</script>\n"
               ]
             ]
           }
         },
         "CreationPolicy": {
            "ResourceSignal": {
               "Count": "1",
               "Timeout": "PT75M"
            }
         }
      }
    },
    "CodeDeployServerInstance" : {
      "Type" : "AWS::EC2::Instance",
      "DependsOn" : "InternetGateway",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/scripts/Unzip-Archive.ps1"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/modules/AWSQuickStart.zip"
              },
              "c:\\cfn\\scripts\\Download-File.ps1": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/sharepoint/latest/microsoft-utilities/scripts/Download-File.ps1"
              },
            }, 
            "commands": {
              "a-set-execution-policy": {
                 "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                 "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                  "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                  "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                  "command": {
                    "Fn::Join": ["",
                       [
                         "powershell.exe -Command \"",
                         "New-AWSQuickStartResourceSignal -Stack '",
                         {
                            "Ref": "AWS::StackName"
                         },
                            "' -Resource 'QuickStart-CodeDeployServer1' -Region '",
                         {
                            "Ref": "AWS::Region"
                         },
                         "'\""
                       ]
                    ]
                  },
                  "waitAfterCompletion": "0"
              },
              "d-install-iis-aspnet-45": {
                "command": {
                  "Fn::Join": ["", ["powershell.exe -Command Install-WindowsFeature Web-Server,Web-Asp-Net45 -IncludeManagementTools"] ]
                },
                "waitAfterCompletion": "forever"
              },
              "e-download-code-deploy-agent": {
                 "command": {
                    "Fn::Join": ["",
                      [
                        "powershell.exe -Command \"C:\\cfn\\scripts\\Download-File.ps1 -Source '",
                        "https://s3.amazonaws.com/aws-codedeploy-us-east-1/latest/codedeploy-agent.msi",
                         "' -Destination 'C:\\cfn\\downloads\\codedeploy-agent.msi'\""
                      ]
                   ]
                 },
                 "waitAfterCompletion": "0"
              },
              "f-install-code-deploy-agent": {
                "command": "C:\\cfn\\downloads\\codedeploy-agent.msi /quiet /l C:\\cfn\\log\\host-agent-install-log.txt",
                "ignoreErrors": "true",
                "waitAfterCompletion": 0
              },
              "g-signal-success": {
                "command": "powershell.exe -Command \"Write-AWSQuickStartStatus\"",
                "waitAfterCompletion": 0
              }
            },
            "services": {
              "windows": {
                "codedeployagent": {
                  "enabled": "true",
                  "ensureRunning": "true"
                }
              }
            }
          }
        }
      },
      "Properties" : {
        "InstanceType" : "t2.medium",
        "SecurityGroupIds" : [{"Ref": "CodeDeployServerSecurityGroup"} ],
        "ImageId" : { "Fn::FindInMap" : [ "AWSAMIRegionMap", { "Ref" : "AWS::Region" }, "WS2012R2" ]},
        "IamInstanceProfile": {"Ref":"CodeDeployTargetServerProfile"},
        "SubnetId": {"Ref":"PublicSubnetA"},
        "KeyName": {"Ref": "KeyName"},
        "Tags" : [ { "Key" : "Name", "Value" : "QuickStart-CodeDeployServer1" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [ "",
               [
                 "<script>\n",
                 "cfn-init.exe -v -c config -s ",
                 {
                   "Ref": "AWS::StackId"
                 },
                 " -r QuickStart-BuildServer1",
                 " --region ",
                 {
                   "Ref": "AWS::Region"
                 },
                 "\n",
                 "</script>\n"
               ]
             ]
           }
         },
         "CreationPolicy": {
            "ResourceSignal": {
               "Count": "1",
               "Timeout": "PT75M"
            }
         }
      }
    },
    "MyApplication" : {
      "Type" : "AWS::CodeDeploy::Application",
      "Properties" : {
        "ApplicationName" : { "Ref" : "CodeDeploy-AppName" } 
      }
    },
    "MyDeploymentGroup" : {
      "Type" : "AWS::CodeDeploy::DeploymentGroup",
      "DependsOn" : "CodeDeployServerInstance",
      "Properties" : {
        "ApplicationName" : {"Ref" : "CodeDeploy-AppName"},
        "DeploymentConfigName" : "CodeDeployDefault.AllAtOnce",
        "DeploymentGroupName" : { "Ref" : "CodeDeploy-DeploymentGroupName" }, 
        "Ec2TagFilters" : [{
          "Key" : "Name",
          "Value" : "QuickStart-CodeDeployServer",
          "Type" : "KEY_AND_VALUE"
        }],
        "ServiceRoleArn" : {"Fn::GetAtt":["CodeDeployServerRole","Arn"]}
      }
    },
    "WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    }
  },
  "Outputs": {
    "S3Bucket" : {
      "Value" : {"Ref":"CodeDeployBucket"},
      "Description" : "S3 Bucket where the code is deployed from"
    }
  }
}